input {
  jdbc {
    jdbc_driver_library => "C:/Work/teamproject/teamproject/ojdbc11.jar"
    jdbc_driver_class   => "Java::oracle.jdbc.driver.OracleDriver"
    jdbc_connection_string => "jdbc:oracle:thin:@192.168.30.34:1521:xe"
    jdbc_user => "final_rc"
    jdbc_password => "!Rc123456789"

    schedule => "0 */10 * * * *"   # 10분마다 (원하면 조절)
    lowercase_column_names => false

    statement => "
      SELECT
        r.id               AS \"id\",
        r.title            AS \"title\",
        r.body             AS \"body\",
        r.ingredients_csv  AS \"ingredients_csv\",   -- CSV로 받거나 아래 참고에 맞게 변경
        r.tags_csv         AS \"tags_csv\",
        r.author_id        AS \"authorId\",
        r.author_nick      AS \"authorNick\",
        r.category         AS \"category\",
        r.recipe_type      AS \"recipeType\",
        r.thumb_url        AS \"thumbUrl\",
        r.video_url        AS \"videoUrl\",
        r.video_text       AS \"videoText\",
        r.visibility       AS \"visibility\",
        r.created_at       AS \"createdAt\",
        r.updated_at       AS \"updatedAt\"
      FROM RECIPES r
      WHERE r.updated_at > :sql_last_value
      ORDER BY r.updated_at
    "

    tracking_column_type => "timestamp"
    last_run_metadata_path => "/var/lib/logstash/.recipe_v2_core_last.yml"
    jdbc_paging_enabled => true
    jdbc_page_size => 5000
    jdbc_default_timezone => "Asia/Seoul"
  }
}

filter {
  # CSV → 배열 (이미 DB가 배열/행이면 이 블록 빼도 됨)
  csv { source => "ingredients_csv" target => "ingredients" separator => "," skip_empty_columns => true }
  csv { source => "tags_csv"        target => "tags"        separator => "," skip_empty_columns => true }

  date { match => ["createdAt","ISO8601","YYYY-MM-dd HH:mm:ss","YYYY/MM/dd HH:mm:ss"] target => "createdAt" }
  date { match => ["updatedAt","ISO8601","YYYY-MM-dd HH:mm:ss","YYYY/MM/dd HH:mm:ss"] target => "updatedAt" }

  mutate {
    # 코어 파이프라인에서는 카운터를 절대 싣지 않음 (서로 덮어쓰기 방지)
    remove_field => ["@version","@timestamp","ingredients_csv","tags_csv","likes","views","comments"]
  }
}

output {
  elasticsearch {
    hosts => ["http://192.168.30.34:9200"]
    index => "recipe-v2"
    document_id => "%{id}"
    action => "update"
    doc_as_upsert => true
  }
  stdout { codec => rubydebug }
}
